<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        98eMGfMA3f/JT37yZP/+/V/gY1wzwxDwQsiftZowYcJYzhnl5eXlMZ3zmM4sL7/88uVUS+68886vNj7S
        vn37TTwGkAp5HRF5Lesxy9q1azvSMdZYvHPIF7Ss+MD9GOecuWaGIeCJrsnkyZOHHz9+/Mtjli9f3l2O
        zZkz50Z5X5KPRbp3775c16xfv/48a5xuy2MhvelrR14fMmc8xi688MJ34tVZGV3n1lgiVO8DMwyBnnBp
        6dKll8j7iY4tLS1tL+8ni15Ta/bs2YOtMWnnzp0t9ONDeigoKHjCuiYkqtNZsvSxdJ+VlZVlyLFE8IOj
        tURPPNNj9PrWfMwPfvCDVXJM1yYj1Ze0ue666/6XHuf+++9/UI81aNDgMD+3VDRs2PCQPM9tt932c6sO
        qqM5/6bzT2KxWLlcA3kumddEPp9k0WPoV2vgxyYyJ/T3OnVG6FqWx7lmhiH405/+9I/WAhAa11k8fD6d
        n2w333zzdCuX+LkkQv/EtY6V9DHwxXfuuOOOqdZcSfoYS5s2bar8wKXWv3//hVZ+MuXl5c2j5zJv3ryk
        XlKJXi453oZFP/2u30eXzDAEeuIl+kLkunXrOlhjWrLnPBmSfQx+Ptpzzz13tVUfT4cOHdbRW30ebdeu
        Xc1pvog17pNkn+d99933X/RWzkcy5DmkTz755HSrXqIfMLbyk+n8889fI5+XHrfUVId/EtYCPeka1dB3
        8KwxxueSdE0qVqxY0U2fjzJZQ5m8n0i3bt1WSHQuZtVL/PivvvpqT7rfuHHjz7Zu3dqGczqfPkael+vi
        kc2px5KV7PGTJk26l+p++ctf/pv1vj/66KPDuVa+X5wlM188r2eeeeZf5ZxXvJ8brHqN/06AzPjxpWSe
        Szzvv/9+O30+XaNRDX0WxfetP/NF+HyumWEI9IRv2bKlLTcnox9zWLx48Vc/pyXp82nJvFZ2qn9Vmo7R
        95NBz0Uel6oZM2bkW+dlstbKhw8fPpmzBQsWXBuvLhXyeD6Hvk+Ki4uHWLnMLFx3ovT54pFrk5WVtbdz
        586r5HkSSfb12PVxmvUD0BkZGWU0pnMrI5T7wAxDICebviMix44cOVKPyOyb4nOe7PMS+rELOq98n76N
        x9HvAz8W3W7evPmugQMH/ooz0qxZs93yPqHPQPh8nNHtevXqHeH7dJtrGP2JKR4fNGjQVw0mazhjek4I
        1+bn58+QGb9f+lr4pvi8/Fi/+c1vrqL7Vi0/lxPFjxXv/CeCzpWdnb1Zn5Pu8/v0TZ/3yWSGAMS6YPV9
        Ir89z9natWtr/Boh1Vl/B0/jc9JnBTojPXr0WEbZiBEjCuk+1zBZC9FmhgCMvjVu5Ra9UZAnn3zylppq
        4z2G9UcUkn0+48ePH3f99dfPt8YguswQoDbk5ua+aeUA8ZghAICPzBAAwEdmCADgIzMEAPCRGQIA+MgM
        AQB8ZIYAAD4yQwAAH5khAICPzBAAwEdmCADgIzMEAPCRGQIA+MgMAQD888V3/g+QuwtVQ9brRQAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>