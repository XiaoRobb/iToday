<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>