<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhZABjAIf/AL3Z8Mzh8vz8/cza5vL3++nw9dDd6PD2+py707nW7dXl8cLc8fT4+9/s9+bw+LzY
        7vLz9Ju2zdrm8KG+1ODt97rO3dzr9u30+s3c6fT3+ury+eXo6tTm9bbU7bXR5rLR6dHg7fr8/aXE3avO
        6fb6/Ovz+uHq8a7I3eLu+NTi7drq9s3i86jG3dzo8dDk9O3y9dnk7arA0rzR4cje8KK7zuXs8snd7d3s
        98be8uny+bHK3bnR5MHV5L3W6env8+70+OTv+K7N5cng89zm7uLu9qDA2Ozz+Nbg6bXO4qrI4cHa7dfo
        9cXV4tjo9LrY8Nbm89jp9sjf8tDi8NLl9OXu98TZ69Lk8vr7/bTS6rHO5eTw+PX2+MTW5brV6rHM4ufv
        9vD0+Nni6efx+cbc7arK5KTC2sDb8a3K4Orz+s7g7sze67HS7PL2+crc6tnn8rXM36bG4K7G2b3U5tbk
        767R7PX4+/L4/MDY6tLm9bTJ2uz0+fb5/LrQ4arF2vD3/d3q9fn5+qbI5MjZ57/S4bjO4OHs9avD1uLs
        9N3r9ubu9d/t+Nro88Td8d/q88fe8LHG1uLr8qbA1dLf6sPd8rPU7rTK3JvB3rLI2f7+/8vh8+71+qvM
        5u/2++Ht98Pb7sXY5+fu88DW6L3X7MLT4eXt9OHp79/u+bjX7+/0+cHS367L4r3S46LB287j9MjX47fU
        6sPc8aDF4eTr8dvq9ujy+t/n7sbd8Ov0+7PP5rfS5/z9/ff4+eDr9L3P3tTn9bbV77DK4KjH37TT7OXw
        +dTj78ff8v3+/rTH16zH3cvf8Ofy+ubx+aTD28/j9PT6/u/z9uPt9djq9tzp9NPl9M/j8q/P6LPM3/n7
        /fj6/Pn7/Pj7/Nnp9vj7/fj6/dbn9fH2+vf6/Orx98zi86fF3LvU5/79/eHt+Pj6/q7M5Nnh56fK5trq
        9Z7E4qTF3szm++Dn8e/1+sLc9Nfp99jj7On0/Pn6/fH1+OPv+LjM2+fy+dHl9KLH5d7l7Pv8/f39/f//
        /yH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAD/ACwAAAAAZABjAAAI/wD/CRxIsKDBgwgHAgIUAgIbBnsY
        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
</value>
  </data>
</root>